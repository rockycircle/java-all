package com.example.intelligent;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.net.UnknownHostException;

import android.Manifest;
import android.app.Activity;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Build;
import android.os.Bundle;
import android.provider.MediaStore;
import android.view.View;
import android.view.Window;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;
import android.support.v4.content.ContextCompat;


public class ThirdRoom extends Activity{
private Button astartConnect;
private TextView textViewa;
private TextView textViewawe;
private Button mTakePhoto;
private Button mChoosePhoto;
private Uri imageUri;
public static final int TAKE_PHOTO = 1;
public static final int CHOOSE_PHOTO = 2;


	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO 自动生成的方法存根
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.thother);
			
		astartConnect = (Button)findViewById(R.id.StartConnect);	
		textViewa = (TextView)findViewById(R.id.damp);
		textViewawe = (TextView)findViewById(R.id.dampwe);
		mTakePhoto= (Button)findViewById(R.id.button1);
		mChoosePhoto= (Button)findViewById(R.id.button3);
		
		
		astartConnect.setOnClickListener(
				new View.OnClickListener() {
					
					@Override
					public void onClick(View v) {
						connect();
						
					}
				});

		
		
		 mTakePhoto.setOnClickListener(new View.OnClickListener() {
	            @Override
	            public void onClick(View v) {
	                //创建file对象，用于存储拍照后的图片；
	                File outputImage = new File(getExternalCacheDir(), "output_image.jpg");

	                try {
	                    if (outputImage.exists()) {
	                        outputImage.delete();
	                    }
	                    outputImage.createNewFile();

	                } catch (Exception e) {
	                    e.printStackTrace();
	                }

	                if (Build.VERSION.SDK_INT >= 24) {
	                   // imageUri = FileProvider.getUriForFile(.this,
	                  //          "com.gyq.cameraalbumtest.fileprovider", outputImage);
	                } else {
	                    imageUri = Uri.fromFile(outputImage);
	                }

	                //启动相机程序
	                Intent intent = new Intent("android.media.action.IMAGE_CAPTURE");
	                intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);
	                startActivityForResult(intent, TAKE_PHOTO);
	            }
	        });
		 
		 
		 mChoosePhoto.setOnClickListener(new View.OnClickListener() {
	            @Override
	            public void onClick(View v) {
	                if (ContextCompat.checkSelfPermission(ThirdRoom.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
	                    ActivityCompat.requestPermissions(ThirdRoom.this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
	                } else {
	                    openAlbum();
	                }
	            }
	        });
	    }

	    //打开相册
	    private void openAlbum() {
	        Intent intent = new Intent("android.intent.action.GET_CONTENT");
	        intent.setType("image/*");
	        startActivityForResult(intent, CHOOSE_PHOTO);
	    }
		 
		 
		
		 
		 
	

//.................................................................
Socket socket = null;
BufferedWriter writer= null;
BufferedReader reader= null;

public void connect(){
	AsyncTask<Void,String,Void> read = new AsyncTask<Void,String,Void>(){

		@Override
		protected Void doInBackground(Void... params) {
		
			try {
		//		socket = new Socket("10.0.2.2", 12345);
	//			socket = new Socket("192.168.1.101", 12345);
	//			socket = new Socket("47.95.221.102", 12345);		
   			socket = new Socket("10.0.2.2", 12345); 
				
				
				writer = new BufferedWriter(
						new OutputStreamWriter(
								socket.getOutputStream()));
				reader = new BufferedReader(
						new InputStreamReader(
								socket.getInputStream()));
				publishProgress("@success");
				
			} catch (UnknownHostException e) {
			Toast.makeText(ThirdRoom.this, "无法连接", Toast.LENGTH_SHORT).show();	
		
			
			} catch (IOException e) {
			Toast.makeText(ThirdRoom.this, "无法连接", Toast.LENGTH_SHORT).show();
			}
			
			
			try {
				String line;
				while((line=reader.readLine())!=null){
					publishProgress(line);
					
				}
			} catch (IOException e) {
				// TODO 自动生成的 catch 块
				e.printStackTrace();
			}
			
			return null;
		}

		@Override
		protected void onProgressUpdate(String... values) {
			if (values[0].equals("@success")) {
              
				Toast.makeText(ThirdRoom.this, "连接成功",
						Toast.LENGTH_SHORT).show();
			}
			if (values[0].indexOf(".")!=-1) {
	              
				textViewawe.setText( values[0]);
				}else{textViewa.setText( values[0]);
				}
		
			
			super.onProgressUpdate(values);
		}
		
		
		
		
		
	};
	read.execute();
}

}

